{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\oyste\\\\projects\\\\Project3\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\oyste\\\\projects\\\\Project3\\\\project3\\\\client\\\\src\\\\pages\\\\EventDetail.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Detail() {\n  var _this = this;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      headlines = _useState2[0],\n      setHeadlines = _useState2[1]; // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n\n\n  var _useParams = useParams(),\n      query = _useParams.query;\n\n  useEffect(function () {\n    API.getHeadlines(query).then(function (res) {\n      return setHeadlines(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, query)), headlines.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, headlines.map(function (headline) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: headline.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: headline.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }\n    }, headline.title)));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default EventDetail;","map":{"version":3,"sources":["C:/Users/oyste/projects/Project3/project3/client/src/pages/EventDetail.js"],"names":["React","useEffect","useState","Link","useParams","Col","Row","Container","Jumbotron","API","List","ListItem","Detail","headlines","setHeadlines","query","getHeadlines","then","res","data","catch","err","console","log","length","map","headline","id","url","title","EventDetail"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,kBAAkCV,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB,iBADgB,CAGhB;AACA;;;AACA,mBAAgBV,SAAS,EAAzB;AAAA,MAAOW,KAAP,cAAOA,KAAP;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,GAAG,CAACO,YAAJ,CAAiBD,KAAjB,EACGE,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIJ,YAAY,CAACI,GAAG,CAACC,IAAL,CAAhB;AAAA,KADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAFZ;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGN,KAFH,CADF,CADF,EAOGF,SAAS,CAACW,MAAV,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,CAACY,GAAV,CAAc,UAAAC,QAAQ;AAAA,wBACrB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAED,QAAQ,CAACE,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACG,KADZ,CADF,CADF,CADqB;AAAA,GAAtB,CADH,CADD,gBAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BArBJ,CADF,CADF,CADJ;AA+BC;;AAGH,eAAeC,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Detail() {\n  const [headlines, setHeadlines] = useState({})\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  const {query} = useParams()\n  useEffect(() => {\n    API.getHeadlines(query)\n      .then(res => setHeadlines(res.data))\n      .catch(err => console.log(err));\n  }, [])\n\n  return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {/* {book.title} by {book.author} */}\n                {query}\n              </h1>\n            </Jumbotron>\n            {headlines.length ? (\n              <List>\n                {headlines.map(headline => (\n                  <ListItem key={headline.id}>\n                    <Link to={headline.url}>\n                      <strong>\n                        {headline.title} \n                      </strong>\n                    </Link>\n                    \n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n        \n      </Container>\n    );\n  }\n\n\nexport default EventDetail;\n"]},"metadata":{},"sourceType":"module"}