{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\oyste\\\\projects\\\\Project3\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\oyste\\\\projects\\\\Project3\\\\project3\\\\client\\\\src\\\\pages\\\\Events.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Events() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      events = _useState2[0],\n      setEvents = _useState2[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    API.getAllEvents().then(function (res) {\n      setEvents(res.data.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    console.log(events);\n  }); // Loads all books and sets them to books\n\n  function loadEvents() {//setEvents(newArray);\n    //await console.log(events);\n  }\n\n  ;\n  var newArray = events.map(function (item) {\n    return item.query = encodeURI(\"\".concat(item.teams[0], \" \").concat(item.teams[1]));\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Upcoming Events\")), events.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, events.map(function (event) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: event.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/events/\" + event.query,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, event.teams[0], \" vs \", event.teams[1])));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default Events;","map":{"version":3,"sources":["C:/Users/oyste/projects/Project3/project3/client/src/pages/Events.js"],"names":["React","useState","useEffect","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Events","events","setEvents","getAllEvents","then","res","data","catch","err","console","log","loadEvents","newArray","map","item","query","encodeURI","teams","length","event","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACA,kBAA4BV,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf,iBAFgB,CAKhB;;;AACAX,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,GAAG,CAACU,YAAJ,GAAmBC,IAAnB,CAAwB,UAAAC,GAAG,EAAI;AAACH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAT;AAAyB,KAAzD,EAA4DC,KAA5D,CAAkE,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAArE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACD,GAHQ,CAAT,CANgB,CAWhB;;AACA,WAASU,UAAT,GAAsB,CAGnB;AACD;AAMD;;AAAA;AACD,MAAMC,QAAQ,GAAGX,MAAM,CAACY,GAAP,CAAW,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,KAAL,GAAaC,SAAS,WAAIF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAJ,cAAqBH,IAAI,CAACG,KAAL,CAAW,CAAX,CAArB,EAA1B;AAAA,GAAf,CAAjB;AACE,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIGhB,MAAM,CAACiB,MAAP,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,MAAM,CAACY,GAAP,CAAW,UAAAM,KAAK;AAAA,wBACf,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAK,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,aAAcD,KAAK,CAACJ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,KAAK,CAACF,KAAN,CAAY,CAAZ,CADH,UACuBE,KAAK,CAACF,KAAN,CAAY,CAAZ,CADvB,CADF,CADF,CADe;AAAA,GAAhB,CADH,CADD,gBAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAlBJ,CADF,CADF,CADF;AA2BD;;AAGH,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Events() {\n  // Setting our component's initial state\n  const [events, setEvents] = useState([])\n  \n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    API.getAllEvents().then(res => {setEvents(res.data.data)} ).catch(err => console.log(err));\n    console.log(events);\n  })\n\n  // Loads all books and sets them to books\n  function loadEvents() {\n  \n   \n     //setEvents(newArray);\n    //await console.log(events);\n    \n    \n    \n\n    \n  };\n  const newArray = events.map(item => item.query = encodeURI(`${item.teams[0]} ${item.teams[1]}`));\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"lg-12\">\n            <Jumbotron>\n              <h1>Upcoming Events</h1>\n            </Jumbotron>\n            {events.length ? (\n              <List>\n                {events.map(event => (\n                  <ListItem key={event.id}>\n                    <Link to={\"/events/\" +  event.query}>\n                      <strong>\n                        {event.teams[0]} vs {event.teams[1]}\n                      </strong>\n                    </Link>\n                    {/* <DeleteBtn onClick={() => deleteBook(book._id)} /> */}\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}